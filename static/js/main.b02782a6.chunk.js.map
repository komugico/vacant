{"version":3,"sources":["serviceWorker.js","apps/shared/components/modules/HeaderModule.js","apps/home/stores/home/action.js","apps/home/containers/HomeContainer.js","apps/home/stores/home/reducer.js","apps/home/stores/home/store.js","apps/gamecenter/stores/puzzlepanel/action.js","apps/gamecenter/components/puzzlepanel/atoms/PanelAtom.js","apps/gamecenter/components/puzzlepanel/blocks/BoardBlock.js","apps/gamecenter/components/puzzlepanel/modules/ProblemModule.js","apps/gamecenter/components/puzzlepanel/modules/AnswerModule.js","apps/gamecenter/containers/PuzzlePanelContainer.js","apps/gamecenter/stores/puzzlepanel/logics.js","apps/gamecenter/stores/puzzlepanel/constant.js","apps/gamecenter/stores/puzzlepanel/reducer.js","apps/gamecenter/stores/puzzlepanel/store.js","index.js"],"names":["Boolean","window","location","hostname","match","HeaderModule","props","Navbar","bg","variant","to","Brand","href","Nav","Link","NavDropdown","title","Item","Component","WELCOME","act_welcome","type","HomeContainer","Container","fluid","Row","Col","xl","lg","md","sm","xs","Button","onClick","this","size","block","connect","state","actions","initialState","message","reducer","action","alert","createStore","INIT","act_init","PanelAtom","React","BoardBlock","trs","panel","map","row","y","trBoard","tds","col","x","tdBoard","direction","tableBoard","ProblemModule","Card","Header","Body","AnswerModule","PuzzlePanelContainer","problemPanel","answerPanel","createInitState","i","push","j","numPanel","ansewrPanel","logics","ReactDOM","render","StrictMode","basename","process","exact","path","store","HomeStore","PuzzlePanelStore","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"wWAYoBA,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,mHCUSC,E,kDAvBX,WAAYC,GAAQ,uCACVA,G,0CAGV,WACI,OACI,eAACC,EAAA,EAAD,CAAQC,GAAG,QAAQC,QAAQ,QAA3B,UACI,cAAC,gBAAD,CAAeC,GAAG,IAAlB,SACI,cAACH,EAAA,EAAOI,MAAR,CAAcC,KAAK,IAAnB,sBAEJ,cAAC,gBAAD,CAAeF,GAAG,IAAlB,SACI,cAACG,EAAA,EAAIC,KAAL,CAAUF,KAAK,IAAf,oBAEJ,cAACG,EAAA,EAAD,CAAaC,MAAM,aAAnB,SACI,cAAC,gBAAD,CAAeN,GAAG,0BAAlB,SACI,cAACK,EAAA,EAAYE,KAAb,qC,GAhBGC,aCDdC,EAAU,qBAMVC,EAAc,iBAAO,CAC9BC,KAAMF,ICDJG,E,kDACF,WAAYhB,GAAQ,uCACVA,G,0CAGV,WACI,OACI,gCACI,cAAC,EAAD,IACA,uBACA,cAACiB,EAAA,EAAD,CAAWC,OAAK,EAAhB,SACI,eAACC,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,IACA,eAACA,EAAA,EAAD,CAAKC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAArC,UACI,oDACA,cAACC,EAAA,EAAD,CAAQC,QAASC,KAAK5B,MAAMc,YAAae,KAAK,KAAKC,OAAK,EAAxD,yBAEJ,cAACV,EAAA,EAAD,gB,GAjBIR,aA2BbmB,eAFS,SAACC,GAAD,sBAAiBA,KAEDC,EAAzBF,CAAkCf,G,QC5B3CkB,EAAe,CACjBC,QAAS,WAgBEC,EAVC,WAAmC,IAAlCJ,EAAiC,uDAAzBE,EAAcG,EAAW,uCAC9C,OAAQA,EAAOtB,MACX,KAAKkB,EAED,OADAK,MAAMN,EAAMG,SACLH,EACX,QACI,OAAOA,IClBJO,cAAYH,GCAdI,EAAO,+BAMPC,EAAW,iBAAO,CAC3B1B,KAAMyB,I,QCIKE,E,kDAXX,WAAY1C,GAAQ,uCACVA,G,0CAGV,WACI,OACI,yC,GAPY2C,IAAM/B,WCkDfgC,E,kDA/CX,WAAY5C,GAAQ,uCACVA,G,8CAGV,WAAc,IAAD,OACL6C,EAAMjB,KAAK5B,MAAM8C,MAAMC,KAAI,SAACC,EAAKC,GACjC,EAAKC,QAAQF,EAAKC,MAEtB,OACI,gCACKJ,M,qBAKb,SAAQG,EAAKC,GAAI,IAAD,OACRE,EAAMH,EAAID,KAAI,SAACK,EAAKC,GACpB,EAAKC,QAAQF,EAAKH,EAAGI,MAEzB,OACI,6BACKF,M,qBAKb,SAAQC,EAAKH,EAAGI,GACZ,OACI,6BACI,cAAC,EAAD,CACIE,UAAWH,EACXC,EAAGA,EACHJ,EAAGA,Q,oBAMnB,WACI,OACI,8BACKrB,KAAK4B,mB,GA1CGb,IAAM/B,WCsBhB6C,E,kDApBX,WAAYzD,GAAQ,uCACVA,G,0CAGV,WACI,OACI,eAAC0D,EAAA,EAAD,WACI,cAACA,EAAA,EAAKC,OAAN,UACI,0CAEJ,cAACD,EAAA,EAAKE,KAAN,UACI,cAAC,EAAD,CACId,MAAOlB,KAAK5B,MAAM8C,iB,GAbdH,IAAM/B,WCqBnBiD,E,kDApBX,WAAY7D,GAAQ,uCACVA,G,0CAGV,WACI,OACI,eAAC0D,EAAA,EAAD,WACI,cAACA,EAAA,EAAKC,OAAN,UACI,yCAEJ,cAACD,EAAA,EAAKE,KAAN,UACI,cAAC,EAAD,CACId,MAAOlB,KAAK5B,MAAM8C,iB,GAbfH,IAAM/B,WCK3BkD,E,kDACF,WAAY9D,GAAQ,uCACVA,G,qDAGV,WACI4B,KAAK5B,MAAMyC,a,oBAGf,WACI,OACI,gCACI,cAAC,EAAD,IACA,cAACxB,EAAA,EAAD,CAAWC,OAAK,EAAhB,SACI,eAACC,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CAAKC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAIC,GAAI,GAAtC,SACI,cAAC,EAAD,CACIqB,MAAOlB,KAAK5B,MAAM+D,iBAG1B,cAAC3C,EAAA,EAAD,CAAKC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAIC,GAAI,GAAtC,SACI,cAAC,EAAD,CACIqB,MAAOlB,KAAK5B,MAAMgE,4B,GAtBfpD,aAkCpBmB,eAFS,SAACC,GAAD,sBAAiBA,KAEDC,EAAzBF,CAAkC+B,GC1CpCG,EAAkB,WAI3B,IAHA,IAAIF,EAAe,GACfC,EAAc,GAETE,EAAI,EAAGA,ECNU,EDMYA,IAAK,CACvCH,EAAaI,KAAK,IAClBH,EAAYG,KAAK,IACjB,IAAK,IAAIC,EAAI,EAAGA,ECTM,EDSgBA,IAClCL,EAAaG,GAAGC,KCRD,GDSfH,EAAYE,GAAGC,KCTA,GDmBvB,MANgB,CACZE,SChBsB,EDiBtBN,aAAcA,EACdO,YAAaN,IEAN5B,EATC,WAAyB,IAAxBJ,EAAuB,uDAAf,GAAIK,EAAW,uCACpC,OAAQA,EAAOtB,MACX,KAAKkB,EACD,OAAOsC,IACX,QACI,OAAOvC,ICXJO,cAAYH,GCmB3BoC,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,eAAC,gBAAD,CAAQC,SAAUC,UAAlB,UACI,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAlB,SACI,cAAC,IAAD,CAAUC,MAAOC,EAAjB,SACI,cAAC,EAAD,QAGR,cAAC,IAAD,CAAOH,OAAK,EAACC,KAAK,0BAAlB,SACI,cAAC,IAAD,CAAUC,MAAOE,EAAjB,SACI,cAAC,EAAD,aAKhBC,SAASC,eAAe,ShB8FtB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAACC,GAClCA,EAAaC,kB","file":"static/js/main.b02782a6.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React, { Component } from 'react';\nimport { LinkContainer } from 'react-router-bootstrap';\nimport { Navbar, Nav, NavDropdown } from 'react-bootstrap';\n\nclass HeaderModule extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        return (\n            <Navbar bg=\"light\" variant=\"light\">\n                <LinkContainer to=\"/\">\n                    <Navbar.Brand href=\"/\">Vacant</Navbar.Brand>\n                </LinkContainer>\n                <LinkContainer to=\"/\">\n                    <Nav.Link href=\"/\">Home</Nav.Link>\n                </LinkContainer>\n                <NavDropdown title=\"GameCenter\">\n                    <LinkContainer to=\"/gamecenter/puzzlepanel\">\n                        <NavDropdown.Item>PuzzlePanel</NavDropdown.Item>\n                    </LinkContainer>\n                </NavDropdown>\n            </Navbar>\n        );\n    }\n}\n\nexport default HeaderModule;","/* ========================================================================== */\n/* Action Types                                                               */\n/* ========================================================================== */\nexport const WELCOME = \"@home/home/welcome\";\n\n\n/* ========================================================================== */\n/* Actions                                                                    */\n/* ========================================================================== */\nexport const act_welcome = () => ({\n    type: WELCOME,\n});","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport { Button } from 'react-bootstrap';\n\nimport HeaderModule from '../../shared/components/modules/HeaderModule';\n\nimport * as actions from '../stores/home/action';\n\nclass HomeContainer extends Component {\n    constructor(props) {\n        super(props);\n    }\n    \n    render() {\n        return (\n            <div>\n                <HeaderModule />\n                <br />\n                <Container fluid>\n                    <Row>\n                        <Col></Col>\n                        <Col xl={8} lg={8} md={8} sm={8} xs={8}>\n                            <h1>Welcome to My Home</h1>\n                            <Button onClick={this.props.act_welcome} size=\"lg\" block>Click Me</Button>\n                        </Col>\n                        <Col></Col>\n                    </Row>\n                </Container>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => ({ ...state });\n\nexport default connect(mapStateToProps, actions)(HomeContainer);","/* ========================================================================== */\n/* Import                                                                     */\n/* ========================================================================== */\nimport * as actions from './action';\n\n/* ========================================================================== */\n/* State                                                                      */\n/* ========================================================================== */\nconst initialState = {\n    message: \"welcome\",\n};\n\n/* ========================================================================== */\n/* Reducer                                                                    */\n/* ========================================================================== */\nconst reducer = (state = initialState, action) => {\n    switch (action.type) {\n        case actions.WELCOME:\n            alert(state.message);\n            return state;\n        default:\n            return state;\n    }\n}\n\nexport default reducer;","import { createStore } from \"redux\";\nimport reducer from './reducer';\n\nexport default createStore(reducer);","/* ========================================================================== */\n/* Action Types                                                               */\n/* ========================================================================== */\nexport const INIT = \"@gamecenter/puzzlepanel/init\";\n\n\n/* ========================================================================== */\n/* Actions                                                                    */\n/* ========================================================================== */\nexport const act_init = () => ({\n    type: INIT,\n});","import React from 'react';\n\nclass PanelAtom extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        return (\n            <h1>aaa</h1>\n        );\n    }\n}\n\nexport default PanelAtom;","import React from 'react';\n\nimport PanelAtom from '../atoms/PanelAtom';\n\nclass BoardBlock extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    tableBoard() {\n        let trs = this.props.panel.map((row, y) => {\n            this.trBoard(row, y);\n        });\n        return (\n            <table>\n                {trs}\n            </table>\n        );\n    }\n\n    trBoard(row, y) {\n        let tds = row.map((col, x) => {\n            this.tdBoard(col, y, x);\n        });\n        return (\n            <tr>\n                {tds}\n            </tr>\n        );\n    }\n\n    tdBoard(col, y, x) {\n        return (\n            <td>\n                <PanelAtom\n                    direction={col}\n                    x={x}\n                    y={y}\n                />\n            </td>\n        )\n    }\n\n    render() {\n        return (\n            <div>\n                {this.tableBoard()}\n            </div>\n        );\n    }\n}\n\nexport default BoardBlock;","import React from 'react';\nimport { Card } from 'react-bootstrap';\n\nimport BoardBlock from '../blocks/BoardBlock';\n\nclass ProblemModule extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        return (\n            <Card>\n                <Card.Header>\n                    <b>Problem</b>\n                </Card.Header>\n                <Card.Body>\n                    <BoardBlock\n                        panel={this.props.panel}\n                    />\n                </Card.Body>\n            </Card>\n        );\n    }\n}\n\nexport default ProblemModule;","import React from 'react';\nimport { Card } from 'react-bootstrap';\n\nimport BoardBlock from '../blocks/BoardBlock';\n\nclass AnswerModule extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        return (\n            <Card>\n                <Card.Header>\n                    <b>Answer</b>\n                </Card.Header>\n                <Card.Body>\n                    <BoardBlock\n                        panel={this.props.panel}\n                    />\n                </Card.Body>\n            </Card>\n        );\n    }\n}\n\nexport default AnswerModule;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Container, Row, Col } from 'react-bootstrap';\n\nimport HeaderModule from '../../shared/components/modules/HeaderModule';\n\nimport * as actions from '../stores/puzzlepanel/action';\nimport ProblemModule from '../components/puzzlepanel/modules/ProblemModule';\nimport AnswerModule from '../components/puzzlepanel/modules/AnswerModule';\n\nclass PuzzlePanelContainer extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    componentDidMount() {\n        this.props.act_init();\n    }\n\n    render() {\n        return (\n            <div>\n                <HeaderModule />\n                <Container fluid>\n                    <Row>\n                        <Col xl={6} lg={6} md={6} sm={12} xs={12}>\n                            <ProblemModule\n                                panel={this.props.problemPanel}\n                            />\n                        </Col>\n                        <Col xl={6} lg={6} md={6} sm={12} xs={12}>\n                            <AnswerModule\n                                panel={this.props.answerPanel}\n                            />\n                        </Col>\n                    </Row>\n                </Container>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => ({ ...state });\n\nexport default connect(mapStateToProps, actions)(PuzzlePanelContainer);","import * as C from './constant';\n\nexport const createInitState = () => {\n    let problemPanel = [];\n    let answerPanel = [];\n\n    for (let i = 0; i < C.NUM_PANEL_INIT; i++) {\n        problemPanel.push([]);\n        answerPanel.push([]);\n        for (let j = 0; j < C.NUM_PANEL_INIT; j++) {\n            problemPanel[i].push(C.PANEL_FRONT);\n            answerPanel[i].push(C.PANEL_FRONT);\n        }\n    }\n\n    let initState = {\n        numPanel: C.NUM_PANEL_INIT,\n        problemPanel: problemPanel,\n        ansewrPanel: answerPanel,\n    };\n\n    return initState;\n};","export const NUM_PANEL_INIT = 4;\n\nexport const PANEL_FRONT = 0;\nexport const PANEL_BACK = 1;\n\nexport const PANEL_OBVERSE = 0;\nexport const PANEL_REVERSE = 1;","/* ========================================================================== */\n/* Import                                                                     */\n/* ========================================================================== */\nimport * as actions from './action';\nimport * as logics from './logics';\n\n/* ========================================================================== */\n/* Reducer                                                                    */\n/* ========================================================================== */\nconst reducer = (state = {}, action) => {\n    switch (action.type) {\n        case actions.INIT:\n            return logics.createInitState();\n        default:\n            return state;\n    }\n}\n\nexport default reducer;","import { createStore } from \"redux\";\nimport reducer from './reducer';\n\nexport default createStore(reducer);","/* ========================================================================== */\n/* React-Redux                                                                */\n/* ========================================================================== */\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport { Provider } from 'react-redux';\n\n/* ========================================================================== */\n/* Service Worker                                                             */\n/* ========================================================================== */\nimport * as serviceWorker from './serviceWorker';\n\n/* ========================================================================== */\n/* Containers & Stores                                                        */\n/* ========================================================================== */\nimport HomeContainer from './apps/home/containers/HomeContainer';\nimport HomeStore from './apps/home/stores/home/store';\n\nimport PuzzlePanelContainer from './apps/gamecenter/containers/PuzzlePanelContainer';\nimport PuzzlePanelStore from './apps/gamecenter/stores/puzzlepanel/store';\n\nReactDOM.render(\n    <React.StrictMode>\n        <Router basename={process.env.PUBLIC_URL}>\n            <Route exact path=\"/\">\n                <Provider store={HomeStore}>\n                    <HomeContainer />\n                </Provider>\n            </Route>\n            <Route exact path=\"/gamecenter/puzzlepanel\">\n                <Provider store={PuzzlePanelStore}>\n                    <PuzzlePanelContainer />\n                </Provider>\n            </Route>\n        </Router>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}