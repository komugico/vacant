{"version":3,"sources":["serviceWorker.js","views/shared/components/modules/HeaderModule.js","stores/home/action.js","views/apps/home/containers/HomeContainer.js","stores/home/reducer.js","stores/home/store.js","stores/gamecenter/action.js","views/apps/gamecenter/containers/PuzzlePanelContainer.js","stores/gamecenter/reducer.js","stores/gamecenter/store.js","index.js"],"names":["Boolean","window","location","hostname","match","HeaderModule","props","Navbar","bg","variant","to","Brand","href","Nav","Link","NavDropdown","title","Item","Component","WELCOME","act_welcome","type","HomeContainer","Container","fluid","Row","Col","xl","lg","md","sm","xs","Button","onClick","this","size","block","connect","state","actions","initialState","message","reducer","action","alert","createStore","PuzzlePanelContainer","ReactDOM","render","StrictMode","basename","process","exact","path","store","HomeStore","PuzzlePanelStore","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.932ec9df.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React, { Component } from 'react';\nimport { LinkContainer } from 'react-router-bootstrap';\nimport { Navbar, Nav, NavDropdown } from 'react-bootstrap';\n\nclass HeaderModule extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        return (\n            <Navbar bg=\"light\" variant=\"light\">\n                <LinkContainer to=\"/\">\n                    <Navbar.Brand href=\"/\">Vacant</Navbar.Brand>\n                </LinkContainer>\n                <LinkContainer to=\"/\">\n                    <Nav.Link href=\"/\">Home</Nav.Link>\n                </LinkContainer>\n                <NavDropdown title=\"GameCenter\">\n                    <LinkContainer to=\"/gamecenter/puzzlepanel\">\n                        <NavDropdown.Item>PuzzlePanel</NavDropdown.Item>\n                    </LinkContainer>\n                </NavDropdown>\n            </Navbar>\n        );\n    }\n}\n\nexport default HeaderModule;","/* ========================================================================== */\n/* Action Types                                                               */\n/* ========================================================================== */\nexport const WELCOME = \"@home/home/welcome\";\n\n\n/* ========================================================================== */\n/* Actions                                                                    */\n/* ========================================================================== */\nexport const act_welcome = () => ({\n    type: WELCOME,\n});","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport { Button } from 'react-bootstrap';\n\nimport HeaderModule from '../../../shared/components/modules/HeaderModule';\n\nimport * as actions from '../../../../stores/home/action';\n\nclass HomeContainer extends Component {\n    constructor(props) {\n        super(props);\n    }\n    \n    render() {\n        return (\n            <div>\n                <HeaderModule />\n                <br />\n                <Container fluid>\n                    <Row>\n                        <Col></Col>\n                        <Col xl={8} lg={8} md={8} sm={8} xs={8}>\n                            <h1>Welcome to My Home</h1>\n                            <Button onClick={this.props.act_welcome} size=\"lg\" block>Click Me</Button>\n                        </Col>\n                        <Col></Col>\n                    </Row>\n                </Container>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => ({ ...state });\n\nexport default connect(mapStateToProps, actions)(HomeContainer);","/* ========================================================================== */\n/* Import                                                                     */\n/* ========================================================================== */\nimport * as actions from './action';\n\n/* ========================================================================== */\n/* State                                                                      */\n/* ========================================================================== */\nconst initialState = {\n    message: \"welcome\",\n};\n\n/* ========================================================================== */\n/* Reducer                                                                    */\n/* ========================================================================== */\nconst reducer = (state = initialState, action) => {\n    switch (action.type) {\n        case actions.WELCOME:\n            alert(state.message);\n            return state;\n        default:\n            return state;\n    }\n}\n\nexport default reducer;","import { createStore } from \"redux\";\nimport reducer from './reducer';\n\nexport default createStore(reducer);","/* ========================================================================== */\n/* Action Types                                                               */\n/* ========================================================================== */\nexport const WELCOME = \"@gamecenter/puzzlepanel/welcome\";\n\n\n/* ========================================================================== */\n/* Actions                                                                    */\n/* ========================================================================== */\nexport const act_welcome = (message) => ({\n    type: WELCOME,\n    message: message\n});","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport { Button } from 'react-bootstrap';\n\nimport HeaderModule from '../../../shared/components/modules/HeaderModule';\n\nimport * as actions from '../../../../stores/gamecenter/action';\n\nclass PuzzlePanelContainer extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        return (\n            <div>\n                <HeaderModule />\n                <Container fluid>\n                    <Row>\n                        <Col xl={6} lg={6} md={6} sm={6} xs={6}>\n                            正解はこっち\n                            <Button\n                                onClick={() => this.props.act_welcome(\"正解\")}\n                                size=\"lg\"\n                                block\n                            >\n                                正解\n                            </Button>\n                        </Col>\n                        <Col xl={6} lg={6} md={6} sm={6} xs={6}>\n                            操作はこっち\n                            <Button\n                                onClick={() => this.props.act_welcome(\"操作\")}\n                                size=\"lg\"\n                                block\n                            >\n                                正解\n                            </Button>\n                        </Col>\n                    </Row>\n                </Container>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => ({ ...state });\n\nexport default connect(mapStateToProps, actions)(PuzzlePanelContainer);","/* ========================================================================== */\n/* Import                                                                     */\n/* ========================================================================== */\nimport * as actions from './action';\n\n/* ========================================================================== */\n/* State                                                                      */\n/* ========================================================================== */\nconst initialState = {\n    message: \"welcome\",\n};\n\n/* ========================================================================== */\n/* Reducer                                                                    */\n/* ========================================================================== */\nconst reducer = (state = initialState, action) => {\n    switch (action.type) {\n        case actions.WELCOME:\n            alert(action.message);\n            return state;\n        default:\n            return state;\n    }\n}\n\nexport default reducer;","import { createStore } from \"redux\";\nimport reducer from './reducer';\n\nexport default createStore(reducer);","/* ========================================================================== */\n/* React-Redux                                                                */\n/* ========================================================================== */\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport { Provider } from 'react-redux';\n\n/* ========================================================================== */\n/* Service Worker                                                             */\n/* ========================================================================== */\nimport * as serviceWorker from './serviceWorker';\n\n/* ========================================================================== */\n/* Containers & Stores                                                        */\n/* ========================================================================== */\nimport HomeContainer from './views/apps/home/containers/HomeContainer';\nimport HomeStore from './stores/home/store';\n\nimport PuzzlePanelContainer from './views/apps/gamecenter/containers/PuzzlePanelContainer';\nimport PuzzlePanelStore from './stores/gamecenter/store';\n\nReactDOM.render(\n    <React.StrictMode>\n        <Router basename={process.env.PUBLIC_URL}>\n            <Route exact path=\"/\">\n                <Provider store={HomeStore}>\n                    <HomeContainer />\n                </Provider>\n            </Route>\n            <Route exact path=\"/gamecenter/puzzlepanel\">\n                <Provider store={PuzzlePanelStore}>\n                    <PuzzlePanelContainer />\n                </Provider>\n            </Route>\n        </Router>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}