{"version":3,"sources":["serviceWorker.js","apps/shared/components/modules/HeaderModule.js","apps/home/stores/home/action.js","apps/home/containers/HomeContainer.js","apps/home/stores/home/reducer.js","apps/home/stores/home/store.js","apps/gamecenter/stores/puzzlepanel/action.js","apps/gamecenter/components/puzzlepanel/atoms/PanelAtom.js","apps/gamecenter/stores/puzzlepanel/constant.js","apps/gamecenter/components/puzzlepanel/blocks/BoardBlock.js","apps/gamecenter/components/puzzlepanel/modules/ProblemModule.js","apps/gamecenter/components/puzzlepanel/modules/AnswerModule.js","apps/gamecenter/components/puzzlepanel/modules/OperationModule.js","apps/gamecenter/containers/PuzzlePanelContainer.js","apps/gamecenter/stores/puzzlepanel/logics.js","apps/gamecenter/stores/puzzlepanel/reducer.js","apps/gamecenter/stores/puzzlepanel/store.js","index.js"],"names":["Boolean","window","location","hostname","match","HeaderModule","props","Navbar","bg","variant","to","Brand","href","Nav","Link","NavDropdown","title","Item","Component","WELCOME","act_welcome","type","HomeContainer","Container","fluid","Row","Col","xl","lg","md","sm","xs","Button","onClick","this","size","block","connect","state","actions","initialState","message","reducer","action","alert","createStore","INIT","PROBLEM_RANDOM","FLIP_ANSWER_PANELS","act_init","act_problem_random","act_flip_answer_panels","x","y","PanelAtom","panel","src","process","style","height","imgPanel","React","BoardBlock","trs","panels","map","row","trBoard","border","tds","col","tdBoard","handle_click","tableBoard","ProblemModule","Card","Header","Body","AnswerModule","OperationModule","PuzzlePanelContainer","problemPanels","answerPanels","createInitState","i","push","j","numPanel","createProblemRandom","cntFlips","Math","floor","random","c_x","c_y","flipPanels","flipPanel","logics","cpy_answerPanels","JSON","parse","stringify","ReactDOM","render","StrictMode","basename","exact","path","store","HomeStore","PuzzlePanelStore","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.13f8bca2.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React, { Component } from 'react';\nimport { LinkContainer } from 'react-router-bootstrap';\nimport { Navbar, Nav, NavDropdown } from 'react-bootstrap';\n\nclass HeaderModule extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        return (\n            <Navbar bg=\"light\" variant=\"light\">\n                <LinkContainer to=\"/\">\n                    <Navbar.Brand href=\"/\">Vacant</Navbar.Brand>\n                </LinkContainer>\n                <LinkContainer to=\"/\">\n                    <Nav.Link href=\"/\">Home</Nav.Link>\n                </LinkContainer>\n                <NavDropdown title=\"GameCenter\">\n                    <LinkContainer to=\"/gamecenter/puzzlepanel\">\n                        <NavDropdown.Item>PuzzlePanel</NavDropdown.Item>\n                    </LinkContainer>\n                </NavDropdown>\n            </Navbar>\n        );\n    }\n}\n\nexport default HeaderModule;","/* ========================================================================== */\n/* Action Types                                                               */\n/* ========================================================================== */\nexport const WELCOME = \"@home/home/welcome\";\n\n\n/* ========================================================================== */\n/* Actions                                                                    */\n/* ========================================================================== */\nexport const act_welcome = () => ({\n    type: WELCOME,\n});","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport { Button } from 'react-bootstrap';\n\nimport HeaderModule from '../../shared/components/modules/HeaderModule';\n\nimport * as actions from '../stores/home/action';\n\nclass HomeContainer extends Component {\n    constructor(props) {\n        super(props);\n    }\n    \n    render() {\n        return (\n            <div>\n                <HeaderModule />\n                <br />\n                <Container fluid>\n                    <Row>\n                        <Col></Col>\n                        <Col xl={8} lg={8} md={8} sm={8} xs={8}>\n                            <h1>Welcome to My Home</h1>\n                            <Button onClick={this.props.act_welcome} size=\"lg\" block>Click Me</Button>\n                        </Col>\n                        <Col></Col>\n                    </Row>\n                </Container>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => ({ ...state });\n\nexport default connect(mapStateToProps, actions)(HomeContainer);","/* ========================================================================== */\n/* Import                                                                     */\n/* ========================================================================== */\nimport * as actions from './action';\n\n/* ========================================================================== */\n/* State                                                                      */\n/* ========================================================================== */\nconst initialState = {\n    message: \"welcome\",\n};\n\n/* ========================================================================== */\n/* Reducer                                                                    */\n/* ========================================================================== */\nconst reducer = (state = initialState, action) => {\n    switch (action.type) {\n        case actions.WELCOME:\n            alert(state.message);\n            return state;\n        default:\n            return state;\n    }\n}\n\nexport default reducer;","import { createStore } from \"redux\";\nimport reducer from './reducer';\n\nexport default createStore(reducer);","/* ========================================================================== */\n/* Action Types                                                               */\n/* ========================================================================== */\nexport const INIT = \"@gamecenter/puzzlepanel/init\";\nexport const PROBLEM_RANDOM = \"@gamecenter/puzzlepanel/prob_random\";\nexport const FLIP_ANSWER_PANELS = \"@gamecenter/puzzlepanel/flip_answer_panels\";\n\n\n/* ========================================================================== */\n/* Actions                                                                    */\n/* ========================================================================== */\nexport const act_init = () => ({\n    type: INIT,\n});\n\nexport const act_problem_random = () => ({\n    type: PROBLEM_RANDOM,\n});\n\nexport const act_flip_answer_panels = (x, y) => ({\n    type: FLIP_ANSWER_PANELS,\n    x: x,\n    y: y,\n});","import React from 'react';\n\nimport * as C from '../../../stores/puzzlepanel/constant';\n\nclass PanelAtom extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    imgPanel() {\n        if (this.props.panel === C.PANEL_FRONT) {\n            return (\n                <img\n                    src={process.env.PUBLIC_URL + \"/images/luffy.png\"}\n                    style={{ height: \"50px\" }}\n                />\n            );\n        }\n        else {\n            return (\n                <img\n                    src={process.env.PUBLIC_URL + \"/images/enel.png\"}\n                    style={{ height: \"50px\" }}\n                />\n            );\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                { this.imgPanel() }\n            </div>\n        );\n    }\n}\n\nexport default PanelAtom;","export const NUM_PANEL_INIT = 4;\n\nexport const PANEL_FRONT = 0;\nexport const PANEL_BACK = 1;\n\nexport const PANEL_OBVERSE = 0;\nexport const PANEL_REVERSE = 1;","import React from 'react';\nimport { Row, Col } from 'react-bootstrap';\n\nimport PanelAtom from '../atoms/PanelAtom';\n\nclass BoardBlock extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    tableBoard() {\n        let trs = this.props.panels.map((row, y) => {\n            return this.trBoard(row, y);\n        });\n        return (\n            <table style={{ border: \"solid 1px\" }}>\n                <tbody>\n                    {trs}\n                </tbody>\n            </table>\n        );\n    }\n\n    trBoard(row, y) {\n        let tds = row.map((col, x) => {\n            return this.tdBoard(col, y, x);\n        });\n        return (\n            <tr style={{border: \"solid 1px\"}}>\n                {tds}\n            </tr>\n        );\n    }\n\n    tdBoard(col, y, x) {\n        return (\n            <td\n                style={{ border: \"solid 1px\" }}\n                onClick={() => this.props.handle_click(x, y)}\n            >\n                <PanelAtom\n                    panel={col}\n                    x={x}\n                    y={y}\n                />\n            </td>\n        )\n    }\n\n    render() {\n        return (\n            <Row>\n                <Col></Col>\n                <Col xl={10} lg={10} md={10} sm={10} xs={10}>\n                    {this.tableBoard()}\n                </Col>\n                <Col></Col>\n            </Row>\n        );\n    }\n}\n\nexport default BoardBlock;","import React from 'react';\nimport { Card } from 'react-bootstrap';\n\nimport BoardBlock from '../blocks/BoardBlock';\n\nclass ProblemModule extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        return (\n            <Card>\n                <Card.Header>\n                    <b>Problem</b>\n                </Card.Header>\n                <Card.Body>\n                    <BoardBlock\n                        panels={this.props.panels}\n                        handle_click={() => alert(\"ズルはいけません\")}\n                    />\n                </Card.Body>\n            </Card>\n        );\n    }\n}\n\nexport default ProblemModule;","import React from 'react';\nimport { Card } from 'react-bootstrap';\n\nimport BoardBlock from '../blocks/BoardBlock';\n\nclass AnswerModule extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        return (\n            <Card>\n                <Card.Header>\n                    <b>Answer</b>\n                </Card.Header>\n                <Card.Body>\n                    <BoardBlock\n                        panels={this.props.panels}\n                        handle_click={this.props.act_flip_answer_panels}\n                    />\n                </Card.Body>\n            </Card>\n        );\n    }\n}\n\nexport default AnswerModule;","import React from 'react';\nimport { Card, Button } from 'react-bootstrap';\n\nclass OperationModule extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        return (\n            <Card>\n                <Card.Header>\n                    <b>Operation</b>\n                </Card.Header>\n                <Card.Body>\n                    <Button onClick={() => this.props.act_problem_random()}>問題生成</Button>\n                </Card.Body>\n            </Card>\n        );\n    }\n}\n\nexport default OperationModule;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Container, Row, Col } from 'react-bootstrap';\n\nimport HeaderModule from '../../shared/components/modules/HeaderModule';\n\nimport * as actions from '../stores/puzzlepanel/action';\nimport ProblemModule from '../components/puzzlepanel/modules/ProblemModule';\nimport AnswerModule from '../components/puzzlepanel/modules/AnswerModule';\nimport OperationModule from '../components/puzzlepanel/modules/OperationModule';\n\nclass PuzzlePanelContainer extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    componentDidMount() {\n        this.props.act_init();\n    }\n\n    render() {\n        return (\n            <div>\n                <HeaderModule />\n                <br />\n                <Container fluid>\n                    <Row>\n                        <Col xl={12} lg={12} md={12} sm={12} xs={12}>\n                            <OperationModule\n                                act_problem_random={this.props.act_problem_random}\n                            />\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col xl={6} lg={6} md={6} sm={12} xs={12}>\n                            <ProblemModule\n                                panels={this.props.problemPanels}\n                            />\n                        </Col>\n                        <Col xl={6} lg={6} md={6} sm={12} xs={12}>\n                            <AnswerModule\n                                panels={this.props.answerPanels}\n                                act_flip_answer_panels={this.props.act_flip_answer_panels}\n                            />\n                        </Col>\n                    </Row>\n                </Container>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => ({ ...state });\n\nexport default connect(mapStateToProps, actions)(PuzzlePanelContainer);","import * as C from './constant';\n\nexport const createInitState = () => {\n    let problemPanels = [];\n    let answerPanels = [];\n\n    for (let i = 0; i < C.NUM_PANEL_INIT; i++) {\n        problemPanels.push([]);\n        answerPanels.push([]);\n        for (let j = 0; j < C.NUM_PANEL_INIT; j++) {\n            problemPanels[i].push(C.PANEL_FRONT);\n            answerPanels[i].push(C.PANEL_FRONT);\n        }\n    }\n\n    let initState = {\n        numPanel: C.NUM_PANEL_INIT,\n        problemPanels: problemPanels,\n        answerPanels: answerPanels,\n    };\n\n    return initState;\n};\n\nexport const createProblemRandom = (numPanel) => {\n    let problemPanels = [];\n    for (let i = 0; i < numPanel; i++) {\n        problemPanels.push([]);\n        for (let j = 0; j < numPanel; j++) {\n            problemPanels[i].push(C.PANEL_FRONT);\n        }\n    }\n\n    let cntFlips = Math.floor(Math.random() * 11) + 3;\n    for (let i = 0; i < cntFlips; i++) {\n        let c_x = Math.floor(Math.random() * (numPanel + 1));\n        let c_y = Math.floor(Math.random() * (numPanel + 1));\n        problemPanels = flipPanels(problemPanels, c_x, c_y, numPanel);\n    }\n\n    return problemPanels;\n};\n\nexport const flipPanels = (panels, c_x, c_y, numPanel) => {\n    panels = flipPanel(panels, c_x - 1, c_y - 1, numPanel);\n    panels = flipPanel(panels, c_x - 1, c_y,     numPanel);\n    panels = flipPanel(panels, c_x - 1, c_y + 1, numPanel);\n    panels = flipPanel(panels, c_x,     c_y - 1, numPanel);\n    panels = flipPanel(panels, c_x,     c_y,     numPanel);\n    panels = flipPanel(panels, c_x,     c_y + 1, numPanel);\n    panels = flipPanel(panels, c_x + 1, c_y - 1, numPanel);\n    panels = flipPanel(panels, c_x + 1, c_y,     numPanel);\n    panels = flipPanel(panels, c_x + 1, c_y + 1, numPanel);\n\n    return panels;\n}\n\nconst flipPanel = (panels, x, y, numPanel) => {\n    if (x >= 0 && x < numPanel && y >= 0 && y < numPanel) {\n        if (panels[y][x] === C.PANEL_FRONT) {\n            panels[y][x] = C.PANEL_BACK;\n        }\n        else {\n            panels[y][x] = C.PANEL_FRONT;\n        }\n    }\n\n    return panels;\n}","/* ========================================================================== */\n/* Import                                                                     */\n/* ========================================================================== */\nimport * as actions from './action';\nimport * as logics from './logics';\n\n/* ========================================================================== */\n/* Reducer                                                                    */\n/* ========================================================================== */\nconst reducer = (state = logics.createInitState(), action) => {\n    switch (action.type) {\n        case actions.INIT:\n            return logics.createInitState();\n        case actions.PROBLEM_RANDOM:\n            let problemPanels = logics.createProblemRandom(state.numPanel) \n            return {\n                ...state,\n                problemPanels: problemPanels,\n            }\n        case actions.FLIP_ANSWER_PANELS:\n            let cpy_answerPanels = JSON.parse(JSON.stringify(state.answerPanels))\n            let answerPanels = logics.flipPanels(cpy_answerPanels, action.x, action.y, state.numPanel)\n            return {\n                ...state,\n                answerPanels: answerPanels\n            }\n        default:\n            return state;\n    }\n}\n\nexport default reducer;","import { createStore } from \"redux\";\nimport reducer from './reducer';\n\nexport default createStore(reducer);","/* ========================================================================== */\n/* React-Redux                                                                */\n/* ========================================================================== */\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport { Provider } from 'react-redux';\n\n/* ========================================================================== */\n/* Service Worker                                                             */\n/* ========================================================================== */\nimport * as serviceWorker from './serviceWorker';\n\n/* ========================================================================== */\n/* Containers & Stores                                                        */\n/* ========================================================================== */\nimport HomeContainer from './apps/home/containers/HomeContainer';\nimport HomeStore from './apps/home/stores/home/store';\n\nimport PuzzlePanelContainer from './apps/gamecenter/containers/PuzzlePanelContainer';\nimport PuzzlePanelStore from './apps/gamecenter/stores/puzzlepanel/store';\n\nReactDOM.render(\n    <React.StrictMode>\n        <Router basename={process.env.PUBLIC_URL}>\n            <Route exact path=\"/\">\n                <Provider store={HomeStore}>\n                    <HomeContainer />\n                </Provider>\n            </Route>\n            <Route exact path=\"/gamecenter/puzzlepanel\">\n                <Provider store={PuzzlePanelStore}>\n                    <PuzzlePanelContainer />\n                </Provider>\n            </Route>\n        </Router>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}