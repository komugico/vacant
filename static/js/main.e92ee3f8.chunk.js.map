{"version":3,"sources":["apps/shared/components/modules/HeaderModule.js","apps/home/stores/home/actions.js","apps/home/containers/HomeContainer.js","apps/home/stores/home/reducer.js","apps/home/stores/home/store.js","apps/home/HomeRouter.js","apps/gamecenter/stores/puzzlepanel/actions.js","apps/gamecenter/components/puzzlepanel/atoms/PanelAtom.js","apps/gamecenter/stores/puzzlepanel/constants.js","apps/gamecenter/components/puzzlepanel/blocks/BoardBlock.js","apps/gamecenter/components/puzzlepanel/modules/ProblemModule.js","apps/gamecenter/components/puzzlepanel/modules/AnswerModule.js","apps/gamecenter/components/puzzlepanel/modules/OperationModule.js","apps/gamecenter/containers/PuzzlePanelContainer.js","apps/gamecenter/stores/puzzlepanel/logics.js","apps/gamecenter/stores/puzzlepanel/reducer.js","apps/gamecenter/stores/puzzlepanel/store.js","apps/gamecenter/GameCenterRouter.js","index.js"],"names":["HeaderModule","props","Navbar","bg","variant","to","Brand","href","Nav","Link","NavDropdown","title","Item","React","Component","WELCOME","act_welcome","type","HomeContainer","Container","fluid","Row","Col","xl","lg","md","sm","xs","Button","onClick","this","size","block","connect","state","actions","initialState","message","reducer","action","alert","createStore","HomeRouter","exact","path","store","HomeStore","INIT_STATE","CREATE_PROBLEM_RANDOM","FLIP_ANSWER_PANELS","JUDGE_ANSWER","act_init_state","act_create_problem_random","act_flip_answer_panels","x","y","act_judge_answer","PanelAtom","panel","src","process","style","height","imgPanel","BoardBlock","trs","panels","map","row","trBoard","border","tds","col","tdBoard","handle_click","tableBoard","ProblemModule","Card","Header","Body","AnswerModule","OperationModule","PuzzlePanelContainer","prevProps","prevState","snapshot","cntFlip","problemPanels","answerPanels","createInitState","i","push","j","numPanel","createProblemRandom","cntFlips","Math","floor","random","c_x","c_y","flipPanels","flipPanel","judge","logics","cpy_answerPanels","JSON","parse","stringify","setTimeout","GameCenterRouter","PuzzlePanelStore","ReactDOM","render","StrictMode","basename","document","getElementById"],"mappings":"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","file":"static/js/main.e92ee3f8.chunk.js","sourcesContent":["import React from 'react';\nimport { LinkContainer } from 'react-router-bootstrap';\nimport { Navbar, Nav, NavDropdown } from 'react-bootstrap';\n\nclass HeaderModule extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        return (\n            <Navbar bg=\"light\" variant=\"light\">\n                <LinkContainer to=\"/\">\n                    <Navbar.Brand href=\"/\">Vacant</Navbar.Brand>\n                </LinkContainer>\n                <LinkContainer to=\"/\">\n                    <Nav.Link href=\"/\">Home</Nav.Link>\n                </LinkContainer>\n                <NavDropdown title=\"GameCenter\">\n                    <LinkContainer to=\"/gamecenter/puzzlepanel\">\n                        <NavDropdown.Item>PuzzlePanel</NavDropdown.Item>\n                    </LinkContainer>\n                </NavDropdown>\n            </Navbar>\n        );\n    }\n}\n\nexport default HeaderModule;","/* ========================================================================== */\n/* Action Types                                                               */\n/* ========================================================================== */\nexport const WELCOME = \"@home/home/welcome\";\n\n\n/* ========================================================================== */\n/* Actions                                                                    */\n/* ========================================================================== */\nexport const act_welcome = () => ({\n    type: WELCOME,\n});","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport { Button } from 'react-bootstrap';\n\nimport HeaderModule from '../../shared/components/modules/HeaderModule';\n\nimport * as actions from '../stores/home/actions';\n\nclass HomeContainer extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n    \n    render() {\n        return (\n            <div>\n                <HeaderModule />\n                <br />\n                <Container fluid>\n                    <Row>\n                        <Col></Col>\n                        <Col xl={8} lg={8} md={8} sm={8} xs={8}>\n                            <h1>Welcome to My Home</h1>\n                            <Button onClick={this.props.act_welcome} size=\"lg\" block>Click Me</Button>\n                        </Col>\n                        <Col></Col>\n                    </Row>\n                </Container>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => ({ ...state });\n\nexport default connect(mapStateToProps, actions)(HomeContainer);","/* ========================================================================== */\n/* Import                                                                     */\n/* ========================================================================== */\nimport * as actions from './actions';\n\n/* ========================================================================== */\n/* State                                                                      */\n/* ========================================================================== */\nconst initialState = {\n    message: \"welcome\",\n};\n\n/* ========================================================================== */\n/* Reducer                                                                    */\n/* ========================================================================== */\nconst reducer = (state = initialState, action) => {\n    switch (action.type) {\n        case actions.WELCOME:\n            alert(state.message);\n            return state;\n        default:\n            return state;\n    }\n}\n\nexport default reducer;","import { createStore } from 'redux';\nimport reducer from './reducer';\n\nexport default createStore(reducer);","import React from 'react';\nimport { Route } from \"react-router-dom\";\nimport { Provider } from 'react-redux';\n\nimport HomeContainer from './containers/HomeContainer';\nimport HomeStore from './stores/home/store';\n\nclass HomeRouter extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        return (\n            <div>\n                <Route exact path=\"/\">\n                    <Provider store={HomeStore}>\n                        <HomeContainer />\n                    </Provider>\n                </Route>\n            </div>\n        )\n    }\n}\n\nexport default HomeRouter;","/* ========================================================================== */\n/* Action Types                                                               */\n/* ========================================================================== */\nexport const INIT_STATE = \"@gamecenter/puzzlepanel/init_state\";\nexport const CREATE_PROBLEM_RANDOM = \"@gamecenter/puzzlepanel/create_prob_random\";\nexport const FLIP_ANSWER_PANELS = \"@gamecenter/puzzlepanel/flip_answer_panels\";\nexport const JUDGE_ANSWER = \"@gamecenter/puzzlepanel/judge_answer\";\n\n\n/* ========================================================================== */\n/* Actions                                                                    */\n/* ========================================================================== */\nexport const act_init_state = () => ({\n    type: INIT_STATE,\n});\n\nexport const act_create_problem_random = () => ({\n    type: CREATE_PROBLEM_RANDOM,\n});\n\nexport const act_flip_answer_panels = (x, y) => ({\n    type: FLIP_ANSWER_PANELS,\n    x: x,\n    y: y,\n});\n\nexport const act_judge_answer = () => ({\n    type: JUDGE_ANSWER,\n});","import React from 'react';\n\nimport * as C from '../../../stores/puzzlepanel/constants';\n\nclass PanelAtom extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    imgPanel() {\n        if (this.props.panel === C.PANEL_FRONT) {\n            return (\n                <img\n                    src={process.env.PUBLIC_URL + \"/images/luffy.png\"}\n                    style={{ height: \"50px\" }}\n                />\n            );\n        }\n        else {\n            return (\n                <img\n                    src={process.env.PUBLIC_URL + \"/images/enel.png\"}\n                    style={{ height: \"50px\" }}\n                />\n            );\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                { this.imgPanel() }\n            </div>\n        );\n    }\n}\n\nexport default PanelAtom;","export const NUM_PANEL_INIT = 4;\n\nexport const PANEL_FRONT = 0;\nexport const PANEL_BACK = 1;\n\nexport const PANEL_OBVERSE = 0;\nexport const PANEL_REVERSE = 1;","import React from 'react';\nimport { Row, Col } from 'react-bootstrap';\n\nimport PanelAtom from '../atoms/PanelAtom';\n\nclass BoardBlock extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    tableBoard() {\n        let trs = this.props.panels.map((row, y) => {\n            return this.trBoard(row, y);\n        });\n        return (\n            <table style={{ border: \"solid 1px\" }}>\n                <tbody>\n                    {trs}\n                </tbody>\n            </table>\n        );\n    }\n\n    trBoard(row, y) {\n        let tds = row.map((col, x) => {\n            return this.tdBoard(col, y, x);\n        });\n        return (\n            <tr style={{border: \"solid 1px\"}}>\n                {tds}\n            </tr>\n        );\n    }\n\n    tdBoard(col, y, x) {\n        return (\n            <td\n                style={{ border: \"solid 1px\" }}\n                onClick={() => this.props.handle_click(x, y)}\n            >\n                <PanelAtom\n                    panel={col}\n                    x={x}\n                    y={y}\n                />\n            </td>\n        )\n    }\n\n    render() {\n        return (\n            <Row>\n                <Col></Col>\n                <Col xl={10} lg={10} md={10} sm={10} xs={10}>\n                    {this.tableBoard()}\n                </Col>\n                <Col></Col>\n            </Row>\n        );\n    }\n}\n\nexport default BoardBlock;","import React from 'react';\nimport { Card } from 'react-bootstrap';\n\nimport BoardBlock from '../blocks/BoardBlock';\n\nclass ProblemModule extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        return (\n            <Card>\n                <Card.Header>\n                    <b>Problem</b>\n                </Card.Header>\n                <Card.Body>\n                    <BoardBlock\n                        panels={this.props.panels}\n                        handle_click={() => alert(\"ズルはいけません\")}\n                    />\n                </Card.Body>\n            </Card>\n        );\n    }\n}\n\nexport default ProblemModule;","import React from 'react';\nimport { Card } from 'react-bootstrap';\n\nimport BoardBlock from '../blocks/BoardBlock';\n\nclass AnswerModule extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        return (\n            <Card>\n                <Card.Header>\n                    <b>Answer</b>\n                </Card.Header>\n                <Card.Body>\n                    <BoardBlock\n                        panels={this.props.panels}\n                        handle_click={this.props.act_flip_answer_panels}\n                    />\n                </Card.Body>\n            </Card>\n        );\n    }\n}\n\nexport default AnswerModule;","import React from 'react';\nimport { Row, Col } from 'react-bootstrap';\nimport { Card, Button } from 'react-bootstrap';\n\nclass OperationModule extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        return (\n            <Card>\n                <Card.Header>\n                    <b>Operation</b>\n                </Card.Header>\n                <Card.Body>\n                    <Row>\n                        <Col>\n                            <Button onClick={() => this.props.act_create_problem_random()}>問題生成</Button>\n                        </Col>\n                        <Col>\n                            <Button onClick={() => alert(\"未実装\")}>解答リセット</Button>\n                        </Col>\n                    </Row>\n                </Card.Body>\n            </Card>\n        );\n    }\n}\n\nexport default OperationModule;","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Container, Row, Col } from 'react-bootstrap';\n\nimport HeaderModule from '../../shared/components/modules/HeaderModule';\n\nimport * as actions from '../stores/puzzlepanel/actions';\nimport ProblemModule from '../components/puzzlepanel/modules/ProblemModule';\nimport AnswerModule from '../components/puzzlepanel/modules/AnswerModule';\nimport OperationModule from '../components/puzzlepanel/modules/OperationModule';\n\nclass PuzzlePanelContainer extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    componentDidMount() {\n        this.props.act_init_state();\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevProps.cntFlip !== this.props.cntFlip) {\n            this.props.act_judge_answer();\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <HeaderModule />\n                <br />\n                <Container fluid>\n                    <Row>\n                        <Col xl={12} lg={12} md={12} sm={12} xs={12}>\n                            <OperationModule\n                                act_create_problem_random={this.props.act_create_problem_random}\n                            />\n                        </Col>\n                    </Row>\n                    <br />\n                    <Row>\n                        <Col xl={6} lg={6} md={6} sm={12} xs={12}>\n                            <ProblemModule\n                                panels={this.props.problemPanels}\n                            />\n                        </Col>\n                        <Col xl={6} lg={6} md={6} sm={12} xs={12}>\n                            <AnswerModule\n                                panels={this.props.answerPanels}\n                                act_flip_answer_panels={this.props.act_flip_answer_panels}\n                            />\n                        </Col>\n                    </Row>\n                </Container>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => ({ ...state });\n\nexport default connect(mapStateToProps, actions)(PuzzlePanelContainer);","import * as C from './constants';\n\nexport const createInitState = () => {\n    let problemPanels = [];\n    let answerPanels = [];\n\n    for (let i = 0; i < C.NUM_PANEL_INIT; i++) {\n        problemPanels.push([]);\n        answerPanels.push([]);\n        for (let j = 0; j < C.NUM_PANEL_INIT; j++) {\n            problemPanels[i].push(C.PANEL_FRONT);\n            answerPanels[i].push(C.PANEL_FRONT);\n        }\n    }\n\n    let initState = {\n        numPanel: C.NUM_PANEL_INIT,\n        cntFlip: 0,\n        problemPanels: problemPanels,\n        answerPanels: answerPanels,\n    };\n\n    return initState;\n};\n\nexport const createProblemRandom = (numPanel) => {\n    let problemPanels = [];\n    for (let i = 0; i < numPanel; i++) {\n        problemPanels.push([]);\n        for (let j = 0; j < numPanel; j++) {\n            problemPanels[i].push(C.PANEL_FRONT);\n        }\n    }\n\n    let cntFlips = Math.floor(Math.random() * 11) + 3;\n    for (let i = 0; i < cntFlips; i++) {\n        let c_x = Math.floor(Math.random() * (numPanel + 1));\n        let c_y = Math.floor(Math.random() * (numPanel + 1));\n        problemPanels = flipPanels(problemPanels, c_x, c_y, numPanel);\n    }\n\n    return problemPanels;\n};\n\nexport const flipPanels = (panels, c_x, c_y, numPanel) => {\n    panels = flipPanel(panels, c_x - 1, c_y - 1, numPanel);\n    panels = flipPanel(panels, c_x - 1, c_y,     numPanel);\n    panels = flipPanel(panels, c_x - 1, c_y + 1, numPanel);\n    panels = flipPanel(panels, c_x,     c_y - 1, numPanel);\n    panels = flipPanel(panels, c_x,     c_y,     numPanel);\n    panels = flipPanel(panels, c_x,     c_y + 1, numPanel);\n    panels = flipPanel(panels, c_x + 1, c_y - 1, numPanel);\n    panels = flipPanel(panels, c_x + 1, c_y,     numPanel);\n    panels = flipPanel(panels, c_x + 1, c_y + 1, numPanel);\n\n    return panels;\n}\n\nconst flipPanel = (panels, x, y, numPanel) => {\n    if (x >= 0 && x < numPanel && y >= 0 && y < numPanel) {\n        if (panels[y][x] === C.PANEL_FRONT) {\n            panels[y][x] = C.PANEL_BACK;\n        }\n        else {\n            panels[y][x] = C.PANEL_FRONT;\n        }\n    }\n\n    return panels;\n}\n\nexport const judge = (problemPanels, answerPanels, numPanel) => {\n    for (let y = 0; y < numPanel; y++) {\n        for (let x = 0; x < numPanel; x++) {\n            if (problemPanels[y][x] !== answerPanels[y][x]) {\n                return false;\n            }\n        }\n    }\n    return true;\n};","/* ========================================================================== */\n/* Import                                                                     */\n/* ========================================================================== */\nimport * as actions from './actions';\nimport * as logics from './logics';\nimport * as C from './constants';\n\n/* ========================================================================== */\n/* Reducer                                                                    */\n/* ========================================================================== */\nconst reducer = (state = logics.createInitState(), action) => {\n    switch (action.type) {\n        case actions.INIT_STATE:\n            return logics.createInitState();\n        case actions.CREATE_PROBLEM_RANDOM:\n            let answerPanels = [];\n            \n            for (let i = 0; i < state.numPanel; i++) {\n                answerPanels.push([]);\n                for (let j = 0; j < state.numPanel; j++) {\n                    answerPanels[i].push(C.PANEL_FRONT);\n                }\n            }\n\n            return {\n                ...state,\n                problemPanels: logics.createProblemRandom(state.numPanel),\n                answerPanels: answerPanels,\n            }\n        case actions.FLIP_ANSWER_PANELS:\n            let cpy_answerPanels = JSON.parse(JSON.stringify(state.answerPanels));\n            let cntFlip = state.cntFlip + 1;\n            return {\n                ...state,\n                answerPanels: logics.flipPanels(cpy_answerPanels, action.x, action.y, state.numPanel),\n                cntFlip: state.cntFlip + 1,\n            }\n        case actions.JUDGE_ANSWER:\n            if (logics.judge(state.problemPanels, state.answerPanels, state.numPanel)) {\n                setTimeout(() => alert(\"CLEAR\"), 1);\n            }\n            return {\n                ...state,\n            }\n        default:\n            return state;\n    }\n}\n\nexport default reducer;","import { createStore } from 'redux';\nimport reducer from './reducer';\n\nexport default createStore(reducer);","import React from 'react';\nimport { Route } from \"react-router-dom\";\nimport { Provider } from 'react-redux';\n\nimport PuzzlePanelContainer from './containers/PuzzlePanelContainer';\nimport PuzzlePanelStore from './stores/puzzlepanel/store';\n\nclass GameCenterRouter extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        return (\n            <div>\n                <Route exact path=\"/gamecenter/puzzlepanel\">\n                    <Provider store={PuzzlePanelStore}>\n                        <PuzzlePanelContainer />\n                    </Provider>\n                </Route>\n            </div>\n        )\n    }\n}\n\nexport default GameCenterRouter;","/* ========================================================================== */\n/* React-Redux                                                                */\n/* ========================================================================== */\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\n/* ========================================================================== */\n/* App Routers                                                                */\n/* ========================================================================== */\nimport HomeRouter from './apps/home/HomeRouter';\nimport GameCenterRouter from './apps/gamecenter/GameCenterRouter';\n\nReactDOM.render(\n    <React.StrictMode>\n        <Router basename={process.env.PUBLIC_URL}>\n            <HomeRouter />\n            <GameCenterRouter />\n        </Router>\n    </React.StrictMode>,\n    document.getElementById('root')\n);"],"sourceRoot":""}